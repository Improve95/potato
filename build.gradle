buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "com.avast.gradle:gradle-docker-compose-plugin:0.17.6"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.avast.gradle.docker-compose' version '0.17.6'
}

group = 'cft.intensive'
version = '0.0.1'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.modelmapper:modelmapper:3.2.0'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
	implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

dockerCompose() {
	projectName = 'wallet'
	useComposeFiles = ['docker-compose.yml']
}

jar {
	manifest {
		attributes 'Main-Class': 'cft.intensive.potato.WalletApplication'
	}
}